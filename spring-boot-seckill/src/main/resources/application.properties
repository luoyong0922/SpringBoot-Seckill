# 项目contextPath 科帮网https://blog.52itstyle.com
server.context-path=/seckill
# 服务端口
server.port=8080
# session最大超时时间(分钟)，默认为30
server.session-timeout=60
# tomcat最大线程数，默认为200
server.tomcat.max-threads=100
# tomcat的URI编码
server.tomcat.uri-encoding=UTF-8

#spring boot从控制台打印出来的日志级别只有ERROR, WARN 还有INFO，如果你想要打印debug级别的日志
#debug=true
logging.level.root=INFO

spring.thymeleaf.mode=LEGACYHTML5
#dev tools
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false
spring.thymeleaf.cache-period=0
spring.thymeleaf.template.cache=false
# 静态文件请求匹配方式
spring.mvc.static-path-pattern=/**

#注意中文乱码
spring.datasource.url=jdbc:mysql://localhost:3306/seckilldb?characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = false
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
spring.jpa.hibernate.ddl-auto = update
# Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Redis
# 数据库索引（默认为0）
spring.redis.database=0
# 服务器地址 变更为自己的
spring.redis.host=127.0.0.1
# 服务器连接端口
spring.redis.port=6379
# 服务器连接密码（默认为空）如果有变更为自己的
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=30000

spring.session.store-type=redis


# redisson lock
redisson.address=redis://127.0.0.1:6379
redisson.password=

#kafka相关配置 参考：https://blog.52itstyle.com/archives/2868/
spring.kafka.bootstrap-servers=127.0.0.1:9092
#设置一个默认组
spring.kafka.consumer.group-id=0
#key-value序列化反序列化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#每次批量发送消息的数量
spring.kafka.producer.batch-size=65536
spring.kafka.producer.buffer-memory=524288


#zookeeper.address
zookeeper.address = 127.0.0.1:2181
#zookeeper.address = 192.168.1.180:2181

#freemarker(用于商品静态页生成简化版)
spring.freemarker.template-loader-path=classpath:/static/template/
spring.freemarker.suffix=.flt
spring.freemarker.enabled=true
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.allow-request-override=false
spring.freemarker.check-template-location=true
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false

#商品静态页(自定义映射路径)
spring.freemarker.html.path = D://file//

# 特别注意：我们通过添加 spring-boot-starter-activemq 依赖即可默认采用内嵌的activeMQ，在生产环境下个人认为尽量还是采用外部服务，提高扩展性和维护性。
# activemq 基础配置
#spring.activemq.broker-url=tcp://47.94.232.109:61616
# 生产环境设置密码
#spring.activemq.user=admin
#spring.activemq.password=123456
#spring.activemq.in-memory=true
#spring.activemq.pool.enabled=false

# 验证码参数(自行替换)
qq.captcha.url= https://ssl.captcha.qq.com/ticket/verify
qq.captcha.aid= 20426***
qq.captcha.AppSecretKey= 0OsIkPt******

# 监控的HTTP端口
management.port=28806
# 忽略拦截
management.security.enabled=false
# 当前应用信息
info.app.version=v1.0.0
info.app.name=爪哇笔记
info.app.email=345849402@qq.com
info.app.url=https://blog.52itstyle.com
#开启shutdown远程关闭功能
endpoints.shutdown.enabled=true
#访问：http://localhost:28806/shutdown   关闭服务
#关闭metrics功能
#endpoints.metrics.enabled=false
#设置beansId
#endpoints.beans.id=mybean
#设置beans路径
#endpoints.beans.path=/bean
#关闭beans 功能
#endpoints.beans.enabled=false
#关闭所有的
#endpoints.enabled=false
#开启单个beans功能
#endpoints.beans.enabled=true
#所有访问添加根目录
#management.context-path=/manage